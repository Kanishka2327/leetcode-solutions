class Solution {
public:
    string simplifyPath(string path) {
        string token = "";
        stringstream ss(path);
        stack<string> st;

        while (getline(ss, token, '/')) {
            // Ignore empty tokens and "." as they do not affect the path
            if (token == "" || token == ".") {
                continue;
            }
            
            if (token == "..") {
                // Only pop if the stack is not empty
                if (!st.empty()) {
                    st.pop();
                }
            } else {
                st.push(token);
            }
        }

        string result = "";
        
        // Rebuild the path from the stack
        while (!st.empty()) {
            result = "/" + st.top() + result;
            st.pop();
        }

        // Return "/" if the result is empty (i.e., the root path)
        return result.empty() ? "/" : result;
    }
};
